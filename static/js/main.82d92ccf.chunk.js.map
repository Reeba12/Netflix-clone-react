{"version":3,"sources":["axios.js","Row.js","request.js","images/logo.png","Navbar.js","Header.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrls","isLarge","useState","Movies","setMovies","trailerurl","setTrailerurl","useEffect","a","get","req","data","results","FetchData","className","map","arr","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","alert","handleClick","src","poster_path","backdrop_path","alt","id","opts","playerVars","autoplay","videoId","API","request","fetchTrending","fetchNetflixoriginals","fetchTopRated","fetchActionMovies","fectComedyMovies","fetchHorrorMovie","fetchRomanticMovies","fetchDocumentaries","Navbar","img","Header","Math","floor","random","length","fetchdata","style","backgroundSize","backgroundImage","backgroundPosition","orignal_name","overview","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82d92ccf.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance=axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\"\r\n    // baseURL:\"https://developers.themoviedb.org/3\"\r\n});\r\nexport default instance","import axios from \"./axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nconst Row = ({ title, fetchUrls, isLarge }) => {\r\n  const base__url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\n  const [Movies, setMovies] = useState([]);\r\n  const [trailerurl, setTrailerurl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function FetchData() {\r\n      const req = await axios.get(fetchUrls);\r\n      setMovies(req.data.results);\r\n      return req;\r\n    }\r\n    FetchData();\r\n  }, [fetchUrls]);\r\n\r\n  const handleClick = (arr) => {\r\n \r\n    if (trailerurl) {\r\n      setTrailerurl('');\r\n    } else {\r\n      movieTrailer(arr?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerurl(urlParams.get(\"v\"))\r\n        })\r\n        .catch((error) => {\r\n         alert(error)\r\n        });\r\n    }\r\n  };\r\n  \r\n  const opts = {\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      {/* title */}\r\n      <div className=\"row\">\r\n        <h2>{title}</h2>\r\n        <div className=\"row_poster_container\">\r\n          {/* container -> poster*/}\r\n          {Movies.map((arr) => {\r\n            return (\r\n              <>\r\n                <img\r\n                  className={`row_poster ${isLarge && `large_poster`}`}\r\n                  key={arr.id}\r\n                  \r\n                  onClick={() => handleClick(arr)}\r\n                  src={` ${base__url}${\r\n                    isLarge ? arr.poster_path : arr.backdrop_path\r\n                  } `}\r\n                  alt={arr.name}\r\n                />\r\n       \r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n        {trailerurl  && <YouTube className=\"vedio\" opts={opts} videoId={trailerurl} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","const API =\"391bbb5aac0d8c068445eae66a872d28\";\r\nconst request = {\r\n  fetchTrending: `/trending/all/week?api_key=${API}&language=en-us`,\r\n  fetchNetflixoriginals: `/discover/tv?api_key=${API}&with_networks=213`,\r\n  fetchTopRated: `https://api.themoviedb.org/3/movie/top_rated?api_key=${API}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API}&with_genres=28`,\r\n  fectComedyMovies: `/discover/movie?api_key=${API}&with_genres=35`,\r\n  fetchHorrorMovie: `/discover/movie?api_key=${API}&with_genres=27`,\r\n  fetchRomanticMovies: `/discover/movie?api_key=${API}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API}&with_genres=99`,\r\n  id: API\r\n};\r\nexport default request;","export default __webpack_public_path__ + \"static/media/logo.3594cc36.png\";","import React from \"react\";\r\nimport \"./App.css\";\r\nimport img from \"./images/logo.png\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <img src={img} alt=\"netflix_logo\" className=\"logo\" />\r\n      <button className=\"sign_in_btn\">Sign in</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport axios from \"./axios\";\r\nimport request from \"./request\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\n// const base__url = \"http://image.tmdb.org/t/p/original/\";\r\nconst Header = () => {\r\n  const [Movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchdata() {\r\n      const req = await axios.get(request.fetchNetflixoriginals);\r\n      setMovies(req.data.results[\r\nMath.floor(Math.random()*req.data.results.length-1)\r\n      ]);\r\n    \r\n      \r\n      return req;\r\n    }\r\n    fetchdata();\r\n  }, []);\r\n  // function truncateString(str, num) {\r\n  //   if (str.length > num) {\r\n  //     return str.slice(0, num) + \"...\";\r\n  //   } else {\r\n  //     return str;\r\n  //   }\r\n  // }\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage: `url(\r\n            http://image.tmdb.org/t/p/original/${Movies?.poster_path}\r\n          )`,\r\n          backgroundPosition: \"center center\",\r\n          \r\n        }}\r\n      >\r\n        <div className=\"fadeheadertop\">\r\n        </div>\r\n          <Navbar />\r\n\r\n        <div className=\"banner_container\">\r\n          <h1>{Movies?.name || Movies?.title || Movies?.orignal_name}</h1>\r\n          <button className=\"banner_btn\">Play Now</button>\r\n          <button className=\"banner_btn\">My List</button>\r\n          <p className=\"banner_description\">{Movies.overview}</p>\r\n        </div>\r\n        <div className=\"fadeheader\"></div>\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n  \r\n};\r\n\r\nexport default Header;\r\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport request from \"./request\";\nimport Header from \"./Header\";\n// import Navbar from \"./Navbar\";\n// import Header from './Header';\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Header />\n      <Row\n        isLarge\n        title=\"NETFLIX ORIGINAL\"\n        fetchUrls={request.fetchNetflixoriginals}\n      />\n      <Row title=\"Trending\" fetchUrls={request.fetchTrending} />\n      <Row title=\"Top-Rated\" fetchUrls={request.fetchTopRated} />\n      <Row title=\"Action-Movies\" fetchUrls={request.fetchActionMovies} />\n      <Row title=\"Comedy-Movies\" fetchUrls={request.fectComedyMovies} />\n      <Row title=\"Documentaries\" fetchUrls={request.fetchDocumentaries} />\n      <Row title=\"Horror\" fetchUrls={request.fetchHorrorMovie} />\n      <Row title=\"Romantic\" fetchUrls={request.fetchRomanticMovies} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}